x Add a delete link for an item in the journal
x Start CSS for the Journal page
x The tab has to refresh itself each time the Journal changes
x Do not use a list
- When tagging a PDF paper we should extract its title
- When tagging something with a feed we should propose to tag entire feed
x When clicking on the browser icon we should open the Journal tab
x Export the Journal to json
- Devise a better mechanism to update the Journal tabs on each change
  Should be impl using the sendMessage() / onMessage mechanism
x Move to chrome.storage to sync local storage between different browsers
- Importing journal
- Tagging PDF documents misses a title
- Automatically add tags on different contents: e.g. if I tag a PDF then add #pdf
  to the journal item
- Lots of web pages have a div of class='tags': use that to suggest tags for the
  current page
x Move to IndexedDB ASAP! chorme.storage.sync is too small to store even moderately
  sized data. We will lose sync but we simply can't use chrome.storage.*.
x Search across all the saved journal items. The search has to be performed both
  on the title, on the date and on all its tags.
- Fuzzy searching (ala Sublime Text)
- Given that now we can't use chrome.sync to share items across all the browsers
  we need a svc somewhere that acts like a store for everyone items. This then will
  enable some ML and social.
x Remove dependency on Vex and use a plain action browser popup
x UI that looks like this atom.io forum page: http://discuss.atom.io/
- Bind Imports/Export actions to keyboard
x Abbreviate the page title when it is too long
- Autocomplete on previously inserted tags
x Avoid duplicates
- Store locally favicon(s)
- Delete by scrolling and hitting 'delete' key